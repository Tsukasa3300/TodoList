{"version":3,"sources":["App.tsx"],"names":["react_1","require","App","_a","useState","value","setValue","_b","todos","setTodos","createElement","className","onSubmit","e","preventDefault","newTodo","id","length","checked","__spreadArrays","type","onChange","target","map","todo","newTodos","handleEdit","onClick","filter","handleDelete","exports"],"mappings":"uQAAA,IAAAA,QAAAC,QAAA,SAGA,SAASC,MACF,IAAAC,EAAAH,QAAAI,SAAA,IAACC,EAAAF,EAAA,GAAOG,EAAAH,EAAA,GACRI,EAAAP,QAAAI,SAAA,IAACI,EAAAD,EAAA,GAAME,EAAAF,EAAA,GAwCZ,OACEP,QAAA,QAAAU,cAAA,MAAA,CAAKC,UAAU,OACbX,QAAA,QAAAU,cAAA,KAAA,KAAA,YACAV,QAAA,QAAAU,cAAA,OAAA,CAAME,SA9BU,SAACC,GACnBA,EAAEC,iBAEF,IAAMC,EAAgB,CACpBV,MAAOA,EACPW,GAAIR,EAAMS,OACVC,SAAS,GAGXT,EAAQU,eAAA,CAAEJ,GAAYP,MAsBlBR,QAAA,QAAAU,cAAA,QAAA,CAAOU,KAAK,OAAOC,SAnCL,SAACR,GACnBP,EAASO,EAAES,OAAOjB,UAmCdL,QAAA,QAAAU,cAAA,QAAA,CAAOU,KAAK,SAASf,MAAM,QAG7BL,QAAA,QAAAU,cAAA,KAAA,KACGF,EAAMe,IAAI,SAACC,GAAO,OACnBxB,QAAA,QAAAU,cAAA,KAAA,KACEV,QAAA,QAAAU,cAAA,QAAA,CAAOU,KAAK,OAAOf,MAAOmB,EAAKnB,MAAOgB,SAAU,SAACR,GAAM,OA1B7C,SAACG,EAAYX,GAC7B,IAAMoB,EAAWjB,EAAMe,IAAI,SAACC,GAI1B,OAHIA,EAAKR,KAAKA,IACZQ,EAAKnB,MAAMA,GAENmB,IAETf,EAASgB,GAmBoDC,CAAWF,EAAKR,GAAIH,EAAES,OAAOjB,UACpFL,QAAA,QAAAU,cAAA,QAAA,CAAOU,KAAK,aACZpB,QAAA,QAAAU,cAAA,SAAA,CAAQiB,QAAS,WAAK,OAlBX,SAACX,GAClB,IAAMS,EAAWjB,EAAMoB,OAAO,SAACJ,GAAO,OAAAA,EAAKR,KAAOA,IAClDP,EAASgB,GAgBmBI,CAAaL,EAAKR,MAAG,WAzDrDf,QAAA,aAkEA6B,QAAA,QAAe5B","file":"App.min.js","sourcesContent":["import React, {useState} from \"react\";\nimport './App.css';\n\nfunction App() {\n  const[value, setValue]=useState(\"\");\n  const[todos,setTodos]=useState<Todo[]>([]);\n\n\n  type Todo = {\n    value: string;\n    id: number;\n    checked: boolean;\n  };\n\n  const handleChange =(e: { target: { value: React.SetStateAction<string>; }; }) =>{\n    setValue(e.target.value);\n  };\n\n  const handleSubmit =(e: { preventDefault: () => void; }) =>{\n    e.preventDefault();\n\n    const newTodo: Todo = {\n      value: value,\n      id: todos.length,\n      checked: false,\n    };\n\n    setTodos([newTodo, ...todos]);\n  };\n\n  const handleEdit =(id: number, value: string)=>{\n    const newTodos = todos.map((todo)=>{\n      if (todo.id===id){\n        todo.value=value;\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n\n  const handleDelete=(id: number)=>{\n    const newTodos = todos.filter((todo)=>todo.id !== id);\n    setTodos(newTodos);\n  }\n\n  return (\n    <div className=\"App\">\n      <h2>todolist</h2>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" onChange={handleChange}/>\n        <input type=\"submit\" value=\"作成\"/>\n      </form>\n\n      <ul>\n        {todos.map((todo)=>(\n        <li>\n          <input type=\"text\" value={todo.value} onChange={(e) => handleEdit(todo.id, e.target.value)}/>\n          <input type=\"checkbox\"/>\n          <button onClick={() =>handleDelete(todo.id)}>削除</button>\n        </li>\n      \n      ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]}